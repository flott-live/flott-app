name: Build Electron App

on:
  push:
    branches:
      - main  # Adjust to trigger on push to specific branches or tags
  pull_request:
    branches:
      - main  # Optional: Specify branches to trigger on PRs

jobs:
  build-windows:
    name: Build on Windows
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Dependencies
        run: npm install

      - name: Build Electron app for Windows
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npm run dist -- -w

      - name: Upload Artifacts (Windows)
        uses: actions/upload-artifact@v3
        with:
          name: electron-app-windows
          path: "dist/Flott Setup 1.0.0.exe"

      - name: Create Release
        id: create_release_windows
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release-windows-${{ github.run_number }}-${{ github.sha }}
          release_name: Release w${{ github.ref_name }}
          body: 'Automated release of Windows Application'
          draft: false
          prerelease: false

      - name: Upload Release Asset (Windows)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release_windows.outputs.upload_url }}
          asset_path: ./dist/Flott Setup 1.0.0.exe
          asset_name: Flott_Setup_1.0.0.exe
          asset_content_type: application/octet-stream

  build-macos:
    name: Build on macOS
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Dependencies
        run: npm install

      - name: Build Electron app for macOS
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npm run dist -- -m

      - name: Upload Artifacts (MacOS)
        uses: actions/upload-artifact@v3
        with:
          name: electron-app-macos
          path: "dist/Flott-1.0.0-arm64.dmg"

      - name: Create Release
        id: create_release_macos
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release-mac-${{ github.run_number }}-${{ github.sha }}
          release_name: Release m${{ github.ref_name }}
          body: 'Automated release of macOS Application'
          draft: false
          prerelease: false

      - name: Upload Release Asset (MacOS)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release_macos.outputs.upload_url }}
          asset_path: ./dist/Flott-1.0.0-arm64.dmg
          asset_name: Flott_1.0.0_arm64.dmg
          asset_content_type: application/octet-stream
